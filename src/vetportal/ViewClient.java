/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package vetportal;

import javax.swing.*;
import java.awt.*;

public class ViewClient extends JFrame {

    /**
     * Creates new form ViewClient
     */
    public ViewClient() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewClientPanel = new JPanel();
        clientInfoTabs = new JTabbedPane();
        clientPanel = new JPanel();
        firstNameLabel = new JLabel();
        firstNameField = new JTextField();
        lastNameLabel = new JLabel();
        lastNameField = new JTextField();
        emailLabel = new JLabel();
        emailField = new JTextField();
        phoneNumberLabel = new JLabel();
        phoneNumberField = new JTextField();
        cCloseBtn = new JButton();
        petsPanel = new JPanel();
        cPetScrollPane = new JScrollPane();
        cPetTable = new JTable();
        pCloseBtn = new JButton();
        appointmentsPanel = new JPanel();
        cAppointmentsScrollPane = new JScrollPane();
        cAppointmentsTable = new JTable();
        aCloseBtn = new JButton();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        viewClientPanel.setBackground(new Color(255, 255, 255));
        viewClientPanel.setFont(new Font("Calibri", 0, 18)); // NOI18N

        clientInfoTabs.setBackground(new Color(255, 255, 255));
        clientInfoTabs.setTabPlacement(JTabbedPane.LEFT);
        clientInfoTabs.setFont(new Font("Calibri", 0, 18)); // NOI18N

        clientPanel.setBackground(new Color(255, 255, 255));

        firstNameLabel.setFont(new Font("Calibri", 0, 14)); // NOI18N
        firstNameLabel.setText("First Name");

        firstNameField.setEditable(false);
        firstNameField.setFont(new Font("Calibri", 0, 14)); // NOI18N

        lastNameLabel.setFont(new Font("Calibri", 0, 14)); // NOI18N
        lastNameLabel.setText("Last Name");

        lastNameField.setEditable(false);
        lastNameField.setFont(new Font("Calibri", 0, 14)); // NOI18N

        emailLabel.setFont(new Font("Calibri", 0, 14)); // NOI18N
        emailLabel.setText("Email Address");

        emailField.setEditable(false);
        emailField.setFont(new Font("Calibri", 0, 14)); // NOI18N
        emailField.addActionListener(new event.ActionListener() {
            public void actionPerformed(event.ActionEvent evt) {
                emailFieldActionPerformed(evt);
            }
        });

        phoneNumberLabel.setFont(new Font("Calibri", 0, 14)); // NOI18N
        phoneNumberLabel.setText("Phone Number");

        phoneNumberField.setEditable(false);
        phoneNumberField.setFont(new Font("Calibri", 0, 14)); // NOI18N

        cCloseBtn.setBackground(new Color(255, 255, 255));
        cCloseBtn.setFont(new Font("Calibri", 0, 18)); // NOI18N
        cCloseBtn.setText("Close");

        GroupLayout clientPanelLayout = new GroupLayout(clientPanel);
        clientPanel.setLayout(clientPanelLayout);
        clientPanelLayout.setHorizontalGroup(
            clientPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(clientPanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(clientPanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addGroup(clientPanelLayout.createSequentialGroup()
                        .addComponent(phoneNumberLabel)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(phoneNumberField, GroupLayout.PREFERRED_SIZE, 200, GroupLayout.PREFERRED_SIZE))
                    .addGroup(clientPanelLayout.createSequentialGroup()
                        .addComponent(emailLabel)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(emailField, GroupLayout.PREFERRED_SIZE, 200, GroupLayout.PREFERRED_SIZE))
                    .addGroup(clientPanelLayout.createSequentialGroup()
                        .addComponent(lastNameLabel)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lastNameField, GroupLayout.PREFERRED_SIZE, 200, GroupLayout.PREFERRED_SIZE))
                    .addGroup(clientPanelLayout.createSequentialGroup()
                        .addComponent(firstNameLabel)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(firstNameField, GroupLayout.PREFERRED_SIZE, 200, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(55, Short.MAX_VALUE))
            .addGroup(GroupLayout.Alignment.TRAILING, clientPanelLayout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cCloseBtn)
                .addContainerGap())
        );
        clientPanelLayout.setVerticalGroup(
            clientPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(clientPanelLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(clientPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameLabel)
                    .addComponent(firstNameField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(clientPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameLabel)
                    .addComponent(lastNameField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(clientPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(emailLabel)
                    .addComponent(emailField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(clientPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(phoneNumberLabel)
                    .addComponent(phoneNumberField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 312, Short.MAX_VALUE)
                .addComponent(cCloseBtn)
                .addContainerGap())
        );

        clientInfoTabs.addTab("Client", clientPanel);

        petsPanel.setBackground(new Color(255, 255, 255));

        cPetScrollPane.setBackground(new Color(255, 255, 255));

        cPetTable.setFont(new Font("Calibri", 0, 14)); // NOI18N
        cPetTable.setModel(new table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pet Name", "DOB", "Species", "Gender"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        cPetScrollPane.setViewportView(cPetTable);

        pCloseBtn.setBackground(new Color(255, 255, 255));
        pCloseBtn.setFont(new Font("Calibri", 0, 18)); // NOI18N
        pCloseBtn.setText("Close");

        GroupLayout petsPanelLayout = new GroupLayout(petsPanel);
        petsPanel.setLayout(petsPanelLayout);
        petsPanelLayout.setHorizontalGroup(
            petsPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(petsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(petsPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(cPetScrollPane, GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
                    .addGroup(GroupLayout.Alignment.TRAILING, petsPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(pCloseBtn)))
                .addContainerGap())
        );
        petsPanelLayout.setVerticalGroup(
            petsPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(petsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cPetScrollPane, GroupLayout.PREFERRED_SIZE, 482, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pCloseBtn)
                .addContainerGap())
        );

        clientInfoTabs.addTab("Pets", petsPanel);

        appointmentsPanel.setBackground(new Color(255, 255, 255));

        cAppointmentsScrollPane.setBackground(new Color(255, 255, 255));

        cAppointmentsTable.setFont(new Font("Calibri", 0, 14)); // NOI18N
        cAppointmentsTable.setModel(new table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Time", "Pet", "Reason"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        cAppointmentsScrollPane.setViewportView(cAppointmentsTable);

        aCloseBtn.setBackground(new Color(255, 255, 255));
        aCloseBtn.setFont(new Font("Calibri", 0, 18)); // NOI18N
        aCloseBtn.setText("Close");

        GroupLayout appointmentsPanelLayout = new GroupLayout(appointmentsPanel);
        appointmentsPanel.setLayout(appointmentsPanelLayout);
        appointmentsPanelLayout.setHorizontalGroup(
            appointmentsPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(appointmentsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(appointmentsPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(cAppointmentsScrollPane, GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
                    .addGroup(GroupLayout.Alignment.TRAILING, appointmentsPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(aCloseBtn)))
                .addContainerGap())
        );
        appointmentsPanelLayout.setVerticalGroup(
            appointmentsPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(appointmentsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cAppointmentsScrollPane, GroupLayout.PREFERRED_SIZE, 482, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(aCloseBtn)
                .addContainerGap())
        );

        clientInfoTabs.addTab("Appointments", appointmentsPanel);

        GroupLayout viewClientPanelLayout = new GroupLayout(viewClientPanel);
        viewClientPanel.setLayout(viewClientPanelLayout);
        viewClientPanelLayout.setHorizontalGroup(
            viewClientPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(viewClientPanelLayout.createSequentialGroup()
                .addComponent(clientInfoTabs, GroupLayout.PREFERRED_SIZE, 509, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        viewClientPanelLayout.setVerticalGroup(
            viewClientPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(clientInfoTabs)
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(viewClientPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(viewClientPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void emailFieldActionPerformed(event.ActionEvent evt) {//GEN-FIRST:event_emailFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailFieldActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton aCloseBtn;
    private JPanel appointmentsPanel;
    private JScrollPane cAppointmentsScrollPane;
    private JTable cAppointmentsTable;
    private JButton cCloseBtn;
    private JScrollPane cPetScrollPane;
    private JTable cPetTable;
    private JTabbedPane clientInfoTabs;
    private JPanel clientPanel;
    private JTextField emailField;
    private JLabel emailLabel;
    private JTextField firstNameField;
    private JLabel firstNameLabel;
    private JTextField lastNameField;
    private JLabel lastNameLabel;
    private JButton pCloseBtn;
    private JPanel petsPanel;
    private JTextField phoneNumberField;
    private JLabel phoneNumberLabel;
    private JPanel viewClientPanel;
    // End of variables declaration//GEN-END:variables
}
